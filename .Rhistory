streams <- sf::read_sf("../data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("../data/CBW/BMPreport2016_landbmps.csv")
totalC <- bmps %>% group_by(StateAbbreviation) %>% summarise(Cost)
by(totalC, totalC$StateAbbreviation, summary)
options(scipen = 5)
acres.bmps <- bmps %>% dplyr::filter(Unit == 'Acres', Cost > 0 & Cost < 100000, TotalAmountCredited > 300 & TotalAmountCredited < 30000)
p1 <- ggplot(acres.bmps, aes(x=Cost, y=TotalAmountCredited)) +
geom_point(size=1) + labs(x= "Cost",
y="TotalAmountCredited",
title = "Cost vs. TotalAmountCredited")
p1
detect.bmps <- bmps %>% mutate(., findCC = stringr::str_detect(BMP, "Cover Crop", negate = F))
filter.bmps <- detect.bmps %>% dplyr::filter(findCC == T, TotalAmountCredited > 1 & TotalAmountCredited < 100)
p2 <- filter.bmps %>% ggplot(., aes(x = StateAbbreviation, y = TotalAmountCredited)) + geom_boxplot(aes(fill = StateAbbreviation))
p2
filter.dams <- dams %>% dplyr::filter(YEAR > 1000)
p3 <- ggplot(filter.dams, aes(x=YEAR, y=STATE, label = DAM_NAME, color = DAM_NAME)) +
geom_point(size=3) + labs(x= "Year",
y="State",
title = "Year of Completion (Dam)")
p3 + geom_text(hjust = 0.3, vjust = 1.5, nudge_x = 0, angle = 90, size = 3)
p4 <- ggplot() + geom_rect(data=filter.dams, aes(xmin=YEAR, xmax=DamRemoval, ymin=DAM_NAME, ymax=DAM_NAME, color=DAM_NAME),size=10) +
labs(x= "Year", y="", title = "Service Life of Dams")
p4 + geom_label(data = filter.dams, aes(x = YEAR + (DamRemoval-YEAR)/2, y = DAM_NAME, label = paste(DamRemoval-YEAR, "Years")))
long.streams <- streams %>% as_tibble() %>% dplyr::select(-geometry) %>% group_by(GNIS_Name) %>% summarise(totalLength = sum(LengthKM))
na.long.streams <- na.omit(long.streams)
s.long.streams <- arrange(na.long.streams, desc(totalLength))
head(s.long.streams, 5)
joined <- st_join(streams, counties, join = st_intersects)
long.joined <- joined %>% as_tibble() %>% dplyr::select(-geometry) %>% group_by(NAME10) %>% summarise(totalLength = sum(LengthKM))
s.long.streams <- arrange(long.joined, desc(totalLength))
head(s.long.streams, 3)
bmps <- bmps %>% mutate(., FIPS.trimmed = stringr::str_sub(GeographyName, 1, 2))
df <- left_join(counties %>% as.data.frame(), bmps %>% as.data.frame(), by = c("STATEFP10" = "FIPS.trimmed"))
View(dams)
View(bmps)
View(bmps)
View(counties)
View(counties)
st_disjoint(counties)
View(counties)
View(counties)
p4 <- ggplot() + geom_rect(data=filter.dams, aes(xmin=YEAR, xmax=DamRemoval, ymin=DAM_NAME, ymax=DAM_NAME, color=DAM_NAME),size=10) +
labs(x= "Year", y="", title = "Service Life of Dams")
p4 + geom_label(data = filter.dams, aes(x = YEAR + (DamRemoval-YEAR)/2, y = DAM_NAME, label = paste(DamRemoval-YEAR, "Years")))
View(joined)
View(joined)
View(streams)
st_disjoint(streams)
View(streams)
View(streams)
disjoin(steams)
# load data
counties <- sf::read_sf("../data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
dams <- sf::read_sf("../data/CBW/Dam_or_Other_Blockage_Removed_2012_2017.shp") %>% sf::st_make_valid()
streams <- sf::read_sf("../data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("../data/CBW/BMPreport2016_landbmps.csv")
View(streams)
View(streams)
disjoin(dams)
disjoint
disjoint(dams)
disjoin_dams
long.streams <- streams %>% as_tibble() %>% dplyr::select(-geometry) %>% group_by(GNIS_Name) %>% summarise(totalLength = sum(LengthKM))
knitr::opts_chunk$set(echo = T, message = F)
library(tidyverse)
library(tmap)
library(sf)
t.names <- tibble(key = c(1, 2, 3), name = c("Huey", "Dewey", "Louis"))
t.scores <- tibble(name = c("Louis", "Huey", "Dewey"), grade = c(99, 45, 33))
t.joined <- left_join(t.names, t.scores, by = "name")
t.joined
t.wonkyNames <- tibble(nombre = c("Dewey", "Louis", "Huey"), x = rep(999),
favoriteFood = c("banana", "apple", "carrot"))
t.joined2 <- left_join(t.names, t.wonkyNames, by = c("name" = "nombre"))
t.joined2
bmps <- read_csv("../data/CBW/BMPreport2016_landbmps.csv")
glimpse(bmps)
bmps <- bmps %>% mutate(., FIPS.trimmed = stringr::str_sub(GeographyName, 1, 5))
glimpse(bmps)
bmps %>% group_by(BMPType) %>% summarise(totalCost = sum(Cost)) %>%
ggplot(., aes(x = BMPType, y = totalCost)) +
geom_bar(stat = "identity") +
theme_minimal()
summary(bmps$Cost)
bmps %>% group_by(BMPType) %>% summarise(totalCost = sum(Cost, na.rm = T)) %>%
ggplot(., aes(x = BMPType, y = totalCost)) +
geom_bar(stat = "identity") +
theme_minimal()
twofactors <- bmps %>% group_by(StateAbbreviation, Sector) %>% summarise(totalCost = sum(Cost))
twofactors
bmps %>% ggplot(., aes(x = StateAbbreviation, y = AmountCredited)) +
geom_boxplot(aes(fill = StateAbbreviation))
bmps %>%
dplyr::filter(., AmountCredited > 1 & AmountCredited < 100) %>%
ggplot(., aes(x = StateAbbreviation, y = AmountCredited)) +
geom_boxplot(aes(fill = StateAbbreviation))
bmps %>%
dplyr::filter(., AmountCredited > 1 & AmountCredited < 100) %>%
ggplot(., aes(x = StateAbbreviation, y = AmountCredited)) +
geom_boxplot(aes(fill = StateAbbreviation)) +
facet_grid(Sector~.)
x <- c(1, 2, 3, 4, 5)
7 %in% x
2 %in% x
c(4, 99, 1) %in% x
counties <- sf::read_sf("../data/CBW/County_Boundaries.shp")
counties %>% sf::st_is_valid()
counties <- counties %>% sf::st_make_valid()
tm_shape(counties) + tm_polygons(col = "ALAND10")
# load data
counties <- sf::read_sf("../data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
dams <- sf::read_sf("../data/CBW/Dam_or_Other_Blockage_Removed_2012_2017.shp") %>% sf::st_make_valid()
streams <- sf::read_sf("../data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("../data/CBW/BMPreport2016_landbmps.csv")
totalC <- bmps %>% group_by(StateAbbreviation) %>% summarise(Cost)
by(totalC, totalC$StateAbbreviation, summary)
options(scipen = 5)
acres.bmps <- bmps %>% dplyr::filter(Unit == 'Acres', Cost > 0 & Cost < 100000, TotalAmountCredited > 300 & TotalAmountCredited < 30000)
p1 <- ggplot(acres.bmps, aes(x=Cost, y=TotalAmountCredited)) +
geom_point(size=1) + labs(x= "Cost",
y="TotalAmountCredited",
title = "Cost vs. TotalAmountCredited")
p1
detect.bmps <- bmps %>% mutate(., findCC = stringr::str_detect(BMP, "Cover Crop", negate = F))
filter.bmps <- detect.bmps %>% dplyr::filter(findCC == T, TotalAmountCredited > 1 & TotalAmountCredited < 100)
p2 <- filter.bmps %>% ggplot(., aes(x = StateAbbreviation, y = TotalAmountCredited)) + geom_boxplot(aes(fill = StateAbbreviation))
p2
filter.dams <- dams %>% dplyr::filter(YEAR > 1000)
p3 <- ggplot(filter.dams, aes(x=YEAR, y=STATE, label = DAM_NAME, color = DAM_NAME)) +
geom_point(size=3) + labs(x= "Year",
y="State",
title = "Year of Completion (Dam)")
p3 + geom_text(hjust = 0.3, vjust = 1.5, nudge_x = 0, angle = 90, size = 3)
t.joined3 <- left_join(streams, dams, by = c("name" = "nombre"))
View(streams)
View(streams)
View(dams)
View(dams)
t.joined3 <- left_join(streams, dams, by = c("COMID" = "COMID"))
t.joined3 <- left_join(streams, dams, by = c("Comid" = "COMID"))
dams1 <- dams %>% as_tibble() %>% dplyr::select(-geometry)
t.joined3 <- left_join(streams, dams, by = c("Comid" = "COMID"))
t.joined3 <- left_join(streams, dams1, by = c("Comid" = "COMID"))
t.joined3 <- left_join(streams, dams1, by = c("COMID" = "COMID"))
View(dams1)
View(dams1)
dams1 <- dams %>% as_tibble() %>% dplyr::select(-geometry)
t.joined3 <- left_join(streams, dams1, by = c("COMID" = "COMID"))
t.joined3 <- left_join(streams, dams1, by = c("COMID" = "ComID"))
t.joined3 <- left_join(streams, dams1, by = c("ComID" = "COMID"))
t.joined2
t.joined3
p4 <- ggplot() + geom_rect(data=t.joined3, aes(xmin=YEAR, xmax=DamRemoval, ymin=DAM_NAME, ymax=DAM_NAME, color=DAM_NAME),size=10) +
labs(x= "Year", y="", title = "Service Life of Dams")
p4 + geom_label(data = filter.dams, aes(x = YEAR + (DamRemoval-YEAR)/2, y = DAM_NAME, label = paste(DamRemoval-YEAR, "Years")))
t.joined3
View(dams)
View(dams)
library(tidyverse)
library(tmap)
library(sf)
# load data
counties <- sf::read_sf("./data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
dams <- sf::read_sf("./data/CBW/Dam_or_Other_Blockage_Removed_2012_2017.shp") %>% sf::st_make_valid()
streams <- sf::read_sf("./data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("./data/CBW/BMPreport2016_landbmps.csv")
pa.counties <- counties %>% filter(STATEFP10 ==42)
pa.dams <- st_intersection(dams, pa.counties)
st_intersects(dams, pa.counties)
dams %>% st_intersects(x = ., y = pa.counties)
dams %>% st_intersects(x = pa.counties, y = .)
dams %>% st_intersects(x = ., y = pa.counties, sparse = F) #sparse False
# Disjoint
dams %>% st_disjoint(., pa.counties, sparse = F)
# Within
dams %>% st_within(., pa.counties, sparse = F)
c.tioga <- pa.counties %>% filter(NAME10 == "Tioga")
streams.tioga <- streams[c.tioga,]
streams.tioga %>% st_covered_by(., c.tioga)
tm_shape(c.tioga) + tm_polygons() + tm_shape(streams.tioga) + tm_lines(col = "blue")
streams.tioga %>% st_is_within_distance(., dams,1)
join1 <- st_join(pa.counties, dams, join = st_intersects)
join2 <- st_join(pa.counties, dams, join = st_disjoint)
join3 <- st_join(pa.counties, streams, join = st_touches)
tm_shape(join2) +tm_polygons()+ tm_shape(streams.tioga) + tm_lines(col = "blue")
# NHDs
nhds <- sf::read_sf("./data/nhdplus_loads.shp") %>% sf::st_make_valid()
glimpse(nhds)
tm_shape(nhds) + tm_polygons("Baseline_L", n = 10)
rpcs <- sf::read_sf("./data/gn_vt_rpcs.shp") %>% sf::st_make_valid()
glimpse(rpcs)
tm_shape(rpcs) + tm_polygons(col = "INITIALS")
tm_shape(rpcs) + tm_borders(col = "red") +
tm_shape(nhds) + tm_polygons(col = "Baseline_L", n = 7) +
tm_shape(rpcs) + tm_borders(col = "red")
# do the join
nhd_rpcs <- st_join(nhds, rpcs, join = st_intersects)
# look at it/confirm it worked
glimpse(nhd_rpcs)
# plot it
tm_shape(nhd_rpcs) + tm_polygons(col = "RPC")
nhd_rpcs %>%
group_by(RPC) %>%
summarize(totalLoad = sum(Baseline_L))
nhd_rpcs %>%
group_by(RPC) %>%
summarize(totalLoad = sum(Baseline_L)) %>%
tm_shape(.) + tm_polygons(col = "totalLoad") # <- this line is new
aggregate(x = nhds, by = rpcs, FUN = sum)
glimpse(nhds)
# fix the problem
nhds %>% dplyr::select(-SOURCEFC, -NHDPlus_Ca, -Tactical_B) %>%
aggregate(x = ., by = rpcs, FUN = sum)
agg.rpcs <- nhds %>% dplyr::select(-SOURCEFC, -NHDPlus_Ca, -Tactical_B) %>%
aggregate(x = ., by = rpcs, FUN = sum)
tm_shape(agg.rpcs) + tm_polygons(col = "Baseline_L")
nhd_rpcs %>% group_by(NHDPlus_ID) %>% summarise(count = n()) %>%
arrange(desc(count))
# area-weighted interpolation
interp.loads <- nhds %>% dplyr::select(Baseline_L, geometry) %>%
st_interpolate_aw(., rpcs, extensive = T)
tm_shape(interp.loads) + tm_polygons(col = "Baseline_L")
comparison <- st_join(agg.rpcs, interp.loads, st_equals)
tmap_mode("view")
comparison %>% mutate(diff = Baseline_L.x - Baseline_L.y) %>%
tm_shape(.) + tm_polygons(col = "diff") +
tm_shape(nhds) + tm_borders(col = "blue")
# load data
counties <- sf::read_sf("./data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
setwd("C:/Users/yooki/OneDrive - University of Nebraska-Lincoln/Desktop/UNL/GEOG 891/GEOG891-git")
# load data
counties <- sf::read_sf("./data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
dams <- sf::read_sf("./data/CBW/Dam_or_Other_Blockage_Removed_2012_2017.shp") %>% sf::st_make_valid()
streams <- sf::read_sf("./data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("./data/CBW/BMPreport2016_landbmps.csv")
pa.counties <- counties %>% filter(STATEFP10 ==42)
pa.dams <- st_intersection(dams, pa.counties)
st_intersects(dams, pa.counties)
dams %>% st_intersects(x = ., y = pa.counties)
dams %>% st_intersects(x = pa.counties, y = .)
dams %>% st_intersects(x = ., y = pa.counties, sparse = F) #sparse False
# Disjoint
dams %>% st_disjoint(., pa.counties, sparse = F)
# Within
dams %>% st_within(., pa.counties, sparse = F)
c.tioga <- pa.counties %>% filter(NAME10 == "Tioga")
streams.tioga <- streams[c.tioga,]
streams.tioga %>% st_covered_by(., c.tioga)
tm_shape(c.tioga) + tm_polygons() + tm_shape(streams.tioga) + tm_lines(col = "blue")
streams.tioga %>% st_is_within_distance(., dams,1)
# do the join
nhd_rpcs <- st_join(nhds, rpcs)
setwd("C:/Users/yooki/OneDrive - University of Nebraska-Lincoln/Desktop/UNL/GEOG 891/GEOG891-git")
typeof(list(1,2,3, "orange"))
library(tidyverse)
x <- seq(1:20)
sum(x)
#factors can be pain - ordering, leveling
typeof(8675309)
typeof(2)
typeof(integer(12039412))
typeof(true)
typeof(TRUE)
typeof(rep(1,20))
typeof(list(1,2,3, "orange"))
library(tidyverse)
mydf <- read_csv("./data/ne_counties.csv")
summary(mydf)
nrow(mydf)
ncol(mydf)
glimpse(mydf)
mydf$Total
summary(mydf$Total)
hist(mydf$Total)
dplyr::filter(mydf, Total > 10000 & MedHousInc < 40000)
mydf %>% dplyr::filter(., Total > 10000 & MedHouseInc < 40000)
#9/1
library(ggplot2)
glimpse(mydf)
plot(mydf$Total, mydf$TotalUnits)
plot(mydf$Total, mydf$PerCapInc)
hist(mydf$PerCapInc)
hist(mydf$PerCapInc, breaks = 50)
#ggplot
ggplot(mydf, aes(x=Total, y=PerCapInc))
ggplot(mydf, aes(x=Total, y=PerCapInc))+geom_point()
ggplot(mydf, aes(x=Total, y=PerCapInc))+geom_point(color = "dark red")
ggplot(mydf, aes(x=Total, y=PerCapInc))+geom_point(color = "dark red") + theme_bw()
ggplot(mydf, aes(x=Total, y=PerCapInc))+geom_point(color = "dark red") + theme_bw()+labs(x="Total Population", y="Per Capita income", title= "My first ggplot")
ggplot(mydf, aes(x=Total, y=PerCapInc))+geom_point(color = "dark red") + geom_smooth(method = "gim", color = "dark green")+ theme_bw()+labs(x="Total Population", y="Per Capita income", title= "My first ggplot")
#using categorical data
mydf2 <- mydf %>% mutate(sizeCategory = ifelse(Total > 20000, "big", "small"))
summary(mydf2$sizeCategory)
summary(as.factor(mydf2$sizeCategory))
ggplot(mydf2, aes(x = Total, y = PerCapInc)) + geom_point(aes(shape = sizeCategory, color = sizeCategory), size =3) + labs(x = "Total Population", y= "Per capita income", title = "My formatted ggplot")
mydf2 %>% ggplot(., aes(x = sizeCategory, y = PerCapInc)) + geom_boxplot(aes(fill = sizeCategory)) + theme_dark() + labs(x= "Categorical Size", y="Per capita income", title = "I made a boxplot", subtitle = "it's handy")
#create
myfirstfunction <- function(x, y){
return(x + y)
}
myfirstfunction(3,6)
#wildcard Friday
#task1
task1 <- function(x , y){
return (x %% 2 == y %% 2)
}
task1(2,5)
task1(1.11,5)
task1(2,2)
#task2
install.packages("rgdal")
install.packages("raster")
library(rgdal)
library(raster)
task2 <- raster::raster("./data/ts_2016.1007_1013.L4.LCHMP3.CIcyano.MAXIMUM_7day.tif")
plot(task2)
summary(task2)
?raster
#classification - match low medium high ...
#count
install.packages("raster")
library(tidyverse)
library(sf)
p.counties <- "./data/CBW/County_Boundaries.shp"
p.stations <- "./data/CBW/Non-Tidal_Water_Quality_Monitoring_Stations_in_the_Chesapeake_Bay.shp"
d.counties <- sf::read_sf(p.counties)
d.stations <- sf::read_sf(p.stations)
glimpse(d.counties)
glimpse(d.stations)
library(tidyverse)
rainfall <- c(0.0, 2.1, 2.5, .1, 0.0, 0.0, 6.8, 3.1, 2.2)
rainfall[1]
f.storm.test <- function(rainfallAmount){
if (rainfallAmount >= 3){
print("Big Storm")
} else {
print ("Little Storm")
}
}
for(i in rainfall){
f.storm.test(i)
}
rainfall %>% purrr::map(., f.storm.test)
rainfall >= 3
max(rainfall)
which(rainfall == max(rainfall))
mydf <- read_csv("./data/ne_counties.csv")
glimpse(mydf)
max(mydf$MedValHous)
which(mydf$MedValHous == max(mydf$MedValHous))
which(mydf$MedValHous == max(mydf$MedValHous)) %>% mydf[.,]
newdf <- mydf %>% mutate(deviation = MedValHous - max(MedValHous))
newdf
newdf %>% ggplot(., aes(x = deviation)) +
geom_histogram() +
theme_minimal()
library(tidyverse)
library(GISTools)
data(tornados)
library(tmap)
library(sf)
library(sp)
streams <- sf::read_sf("./data/Streams_303_d_.shp")
tm_shape(streams) + tm_lines()
counties <- sf::read_sf("./data/County_Boundaries-_Census.shp")
counties_areas <- sf::st_area(counties)
x <- counties%>%mutate(myArea = st_area(.))
lc <- counties %>% dplyr::filter(., NAME10 == "Lancaster")
lc_303ds <- sf::st_intersection(streams, lc)
tm_shape(lc_303ds) + tm_lines()
tm_shape(lc_303ds) + tm_lines(col = "blue")
tm_shape(lc_303ds) + tm_lines(col = "Waterbody_")
buffs <- sf::st_buffer(lc_303ds, dist = 1000)
tm_shape(buffs) + tm_polygons(col = "Waterbody_")
parks <- sf::read_sf("./data/State_Park_Locations.shp")
lc_parks <- sf::st_intersection(lc, parks)
tm_shape(lc_parks) + tm_dots(col = "AreaName", size = "Acres")
tm_shape(lc_303ds) + tm_lines(col = "Waterbody_") +
tm_shape(lc_parks) + tm_dots(col = "AreaName", size = 1)
buffstream <- sf::st_buffer(lc_303ds, dist = 804.6) ##0.5mile = 804.6...
intersect_parks <- sf::st_intersection(lc_parks, buffstream)
filpoint <- intersect_parks %>% dplyr::filter(., AreaName == "Branched Oak SRA")
filline <- lc_303ds %>% dplyr::filter(., Waterbody_ == "Middle Oak Creek" | Waterbody_ == "Oak Creek")
tm_shape(filline) + tm_lines(col = "Waterbody_", scale = 1) +
tm_shape(intersect_parks) + tm_dots(col = "AreaName", size = 1)
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
tm_shape(us_states_sf)+tm_polygons("grey90")+
tm_shape(torn_sf)+tm_dots(col = "red", size = 0.04, shape = 1, alpha =0.5)+
tm_shape(us_states_sf)+tm_borders(col="black")+tm_layout(frame = F)
counties %>% as_Spatial() %>% poly.areas()
parks_p <- sf::st_transform(parks, 26914)
counties_p <- sf::st_transform(counties, 26914)
counties %>% as_Spatial() %>% poly.areas()
counties %>% sf::st_transform(., 26914) %>% sf::st_area()
lc_303ds_p <- sf::st_transform(lc_303ds, 26914)
lc_parks_p <- sf::st_transform(lc_parks, 26914)
proj <- sf::st_distance(lc_303ds_p, lc_parks_p)
unproj <- sf::st_distance(lc_303ds, lc_parks)
proj
unproj
diff_1 <- proj-unproj
hist(diff_1)
##9/23
require(GISTools)
require(tmap)
data(newhaven)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(blocks) + tm_borders() + tm_shape(breach) + tm_dots(col='navyblue')
choose_bw <- function(spdf) {
X <- coordinates(spdf)
sigma <- c(sd(X[,1]), sd(X[,2])) * (2/(3*nrow(X)))^(1/6)
return(sigma)
}
packageurl <- "https://cran.rstudio.com/bin/windows/contrib/3.2/tmap_1.4-1.zip"
install.packages(packageurl, repos=NULL, type="source")
library(tmaptools)
tmap_mode('view')
breach_dens <- smooth_map(breach, cover = blocks, bandwidth = choose_bw(breach))
tm_shape(breach_dens$raster) +tm_raster()
?tmap
buffstream <- sf::st_buffer(lc_303ds, dist = 804.6) ##0.5mile = 804.6...
intersect_parks <- sf::st_intersection(lc_parks, buffstream)
filpoint <- intersect_parks %>% dplyr::filter(., AreaName == "Branched Oak SRA")
filline <- lc_303ds %>% dplyr::filter(., Waterbody_ == "Middle Oak Creek" | Waterbody_ == "Oak Creek")
tm_shape(filline) + tm_lines(col = "Waterbody_", scale = 1) +
tm_shape(intersect_parks) + tm_dots(col = "AreaName", size = 1)
tm_shape(neb) + tm_polygons() + tm_shape(precip) + tm_dots(col='navyblue')
tmap_mode("plot")
# data:
#cumulative rainfall for 2008
precip <- sf::read_sf(
"./data/Precip2008Readings.shp"
)
neb <- sf::read_sf(
"./data/Nebraska_State_Boundary.shp"
)
tmap_mode("plot")
tm_shape(neb) + tm_polygons() + tm_shape(precip) + tm_dots(col='navyblue')
tmap_mode("view")
tm_shape(neb) + tm_polygons() + tm_shape(precip) + tm_dots(col='navyblue')
library(tidyverse)
library(tmap)
library(sf)
# load data
counties <- sf::read_sf("./data/CBW/County_Boundaries.shp") %>% sf::st_make_valid()
dams <- sf::read_sf("./data/CBW/Dam_or_Other_Blockage_Removed_2012_2017.shp") %>% sf::st_make_valid()
streams <- sf::read_sf("./data/CBW/Streams_Opened_by_Dam_Removal_2012_2017.shp") %>% sf::st_make_valid()
bmps <- read_csv("./data/CBW/BMPreport2016_landbmps.csv")
pa.counties <- counties %>% filter(STATEFP10 ==42)
pa.dams <- st_intersection(dams, pa.counties)
st_intersects(dams, pa.counties)
dams %>% st_intersects(x = ., y = pa.counties)
dams %>% st_intersects(x = pa.counties, y = .)
dams %>% st_intersects(x = ., y = pa.counties, sparse = F) #sparse False
# Disjoint
dams %>% st_disjoint(., pa.counties, sparse = F)
# Within
dams %>% st_within(., pa.counties, sparse = F)
c.tioga <- pa.counties %>% filter(NAME10 == "Tioga")
streams.tioga <- streams[c.tioga,]
streams.tioga %>% st_covered_by(., c.tioga)
tm_shape(c.tioga) + tm_polygons() + tm_shape(streams.tioga) + tm_lines(col = "blue")
streams.tioga %>% st_is_within_distance(., dams,1)
join1 <- st_join(pa.counties, dams, join = st_intersects)
join2 <- st_join(pa.counties, dams, join = st_disjoint)
join3 <- st_join(pa.counties, streams, join = st_touches)
tm_shape(join2) +tm_polygons()+ tm_shape(streams.tioga) + tm_lines(col = "blue")
# NHDs
nhds <- sf::read_sf("./data/nhdplus_loads.shp") %>% sf::st_make_valid()
glimpse(nhds)
tm_shape(nhds) + tm_polygons("Baseline_L", n = 10)
rpcs <- sf::read_sf("./data/gn_vt_rpcs.shp") %>% sf::st_make_valid()
glimpse(rpcs)
tm_shape(rpcs) + tm_polygons(col = "INITIALS")
tm_shape(rpcs) + tm_borders(col = "red") +
tm_shape(nhds) + tm_polygons(col = "Baseline_L", n = 7) +
tm_shape(rpcs) + tm_borders(col = "red")
# do the join
nhd_rpcs <- st_join(nhds, rpcs)
# look at it/confirm it worked
glimpse(nhd_rpcs)
# plot it
tm_shape(nhd_rpcs) + tm_polygons(col = "RPC")
nhd_rpcs %>%
group_by(RPC) %>%
summarize(totalLoad = sum(Baseline_L))
nhd_rpcs %>%
group_by(RPC) %>%
summarize(totalLoad = sum(Baseline_L)) %>%
tm_shape(.) + tm_polygons(col = "totalLoad") # <- this line is new
aggregate(x = nhds, by = rpcs, FUN = sum)
glimpse(nhds)
# fix the problem
nhds %>% dplyr::select(-SOURCEFC, -NHDPlus_Ca, -Tactical_B) %>%
aggregate(x = ., by = rpcs, FUN = sum)
agg.rpcs <- nhds %>% dplyr::select(-SOURCEFC, -NHDPlus_Ca, -Tactical_B) %>%
aggregate(x = ., by = rpcs, FUN = sum)
tm_shape(agg.rpcs) + tm_polygons(col = "Baseline_L")
nhd_rpcs %>% group_by(NHDPlus_ID) %>% summarise(count = n()) %>%
arrange(desc(count))
# area-weighted interpolation
interp.loads <- nhds %>% dplyr::select(Baseline_L, geometry) %>%
st_interpolate_aw(., rpcs, extensive = T)
tm_shape(interp.loads) + tm_polygons(col = "Baseline_L")
comparison <- st_join(agg.rpcs, interp.loads, st_equals)
tmap_mode("view")
comparison %>% mutate(diff = Baseline_L.x - Baseline_L.y) %>%
tm_shape(.) + tm_polygons(col = "diff") +
tm_shape(nhds) + tm_borders(col = "blue")
